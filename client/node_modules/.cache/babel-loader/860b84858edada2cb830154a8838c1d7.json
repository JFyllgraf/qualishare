{"ast":null,"code":"export function highlight(color) {\n  const doSomething = () => {\n    console.log('test');\n  }; //remove any format to avoid overlap issues\n\n\n  document.execCommand('removeFormat', false, null); //save selected text\n\n  var text = \"\";\n\n  if (window.getSelection) {\n    text = window.getSelection().toString();\n  } else if (document.selection && document.selection.type !== \"Control\") {\n    text = document.selection.createRange().text;\n  } //create new span around the text\n\n\n  var span = document.createElement(\"span\");\n  span.style.backgroundColor = color;\n  span.innerText = text;\n  span.setAttribute('onclick', \"removeSPan(this)\");\n  document.execCommand('insertHTML', false, span.outerHTML);\n} //Taken from: http://blog.adamcole.ca/2011/11/simple-javascript-rainbow-color.html\n\nexport function rainbowStop(h) {\n  let f = (n, k = (n + h * 12) % 12) => .5 - .5 * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\n  let rgb2hex = (r, g, b) => \"#\" + [r, g, b].map(x => Math.round(x * 255).toString(16).padStart(2, 0)).join('');\n\n  return rgb2hex(f(0), f(8), f(4));\n} //Taken from: https://stackoverflow.com/questions/1484506/random-color-generator\n\nexport function rainbow(numOfSteps, step) {\n  // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distinguishable vibrant markers in Google Maps and other apps.\n  // Adam Cole, 2011-Sept-14\n  // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n  var r, g, b;\n  var h = step / numOfSteps;\n  var i = ~~(h * 6);\n  var f = h * 6 - i;\n  var q = 1 - f;\n\n  switch (i % 6) {\n    case 0:\n      r = 1;\n      g = f;\n      b = 0;\n      break;\n\n    case 1:\n      r = q;\n      g = 1;\n      b = 0;\n      break;\n\n    case 2:\n      r = 0;\n      g = 1;\n      b = f;\n      break;\n\n    case 3:\n      r = 0;\n      g = q;\n      b = 1;\n      break;\n\n    case 4:\n      r = f;\n      g = 0;\n      b = 1;\n      break;\n\n    case 5:\n      r = 1;\n      g = 0;\n      b = q;\n      break;\n  }\n\n  var c = \"#\" + (\"00\" + (~~(r * 255)).toString(16)).slice(-2) + (\"00\" + (~~(g * 255)).toString(16)).slice(-2) + (\"00\" + (~~(b * 255)).toString(16)).slice(-2);\n  return c;\n} //export default {surroundSelection, rainbowStop, rainbow};","map":{"version":3,"sources":["C:/Users/jespe/OneDrive/Skrivebord/projects/qualishare/client/src/Utility/Helpers.js"],"names":["highlight","color","doSomething","console","log","document","execCommand","text","window","getSelection","toString","selection","type","createRange","span","createElement","style","backgroundColor","innerText","setAttribute","outerHTML","rainbowStop","h","f","n","k","Math","max","min","rgb2hex","r","g","b","map","x","round","padStart","join","rainbow","numOfSteps","step","i","q","c","slice"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAAyB;AAC9B,QAAMC,WAAW,GAAG,MAAM;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAsB,GAAlD,CAD8B,CAE9B;;;AACAC,EAAAA,QAAQ,CAACC,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C,EAH8B,CAI9B;;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAIC,MAAM,CAACC,YAAX,EAAyB;AACrBF,IAAAA,IAAI,GAAGC,MAAM,CAACC,YAAP,GAAsBC,QAAtB,EAAP;AACH,GAFD,MAEO,IAAIL,QAAQ,CAACM,SAAT,IAAsBN,QAAQ,CAACM,SAAT,CAAmBC,IAAnB,KAA4B,SAAtD,EAAiE;AACpEL,IAAAA,IAAI,GAAGF,QAAQ,CAACM,SAAT,CAAmBE,WAAnB,GAAiCN,IAAxC;AACH,GAV6B,CAW9B;;;AACA,MAAIO,IAAI,GAAGT,QAAQ,CAACU,aAAT,CAAuB,MAAvB,CAAX;AACAD,EAAAA,IAAI,CAACE,KAAL,CAAWC,eAAX,GAA6BhB,KAA7B;AACAa,EAAAA,IAAI,CAACI,SAAL,GAAiBX,IAAjB;AACAO,EAAAA,IAAI,CAACK,YAAL,CAAkB,SAAlB,EAA6B,kBAA7B;AACAd,EAAAA,QAAQ,CAACC,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CQ,IAAI,CAACM,SAA/C;AACD,C,CAKD;;AACA,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAwB;AAC3B,MAAIC,CAAC,GAAE,CAACC,CAAD,EAAGC,CAAC,GAAC,CAACD,CAAC,GAACF,CAAC,GAAC,EAAL,IAAS,EAAd,KAAqB,KAAG,KAAGI,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASH,CAAC,GAAC,CAAX,EAAa,IAAEA,CAAf,EAAiB,CAAjB,CAAT,EAA6B,CAAC,CAA9B,CAAlC;;AACA,MAAII,OAAO,GAAG,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAW,MAAI,CAACF,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAQC,GAAR,CAAYC,CAAC,IAAER,IAAI,CAACS,KAAL,CAAWD,CAAC,GAAC,GAAb,EAAkBxB,QAAlB,CAA2B,EAA3B,EAA+B0B,QAA/B,CAAwC,CAAxC,EAA0C,CAA1C,CAAf,EAA6DC,IAA7D,CAAkE,EAAlE,CAA7B;;AACA,SAASR,OAAO,CAACN,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAhB;AACH,C,CAGD;;AACA,OAAO,SAASe,OAAT,CAAiBC,UAAjB,EAA6BC,IAA7B,EAAmC;AACtC;AACA;AACA;AACA,MAAIV,CAAJ,EAAOC,CAAP,EAAUC,CAAV;AACA,MAAIV,CAAC,GAAGkB,IAAI,GAAGD,UAAf;AACA,MAAIE,CAAC,GAAG,CAAC,EAAEnB,CAAC,GAAG,CAAN,CAAT;AACA,MAAIC,CAAC,GAAGD,CAAC,GAAG,CAAJ,GAAQmB,CAAhB;AACA,MAAIC,CAAC,GAAG,IAAInB,CAAZ;;AACA,UAAOkB,CAAC,GAAG,CAAX;AACI,SAAK,CAAL;AAAQX,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAGR,CAAJ;AAAOS,MAAAA,CAAC,GAAG,CAAJ;AAAO;;AAC7B,SAAK,CAAL;AAAQF,MAAAA,CAAC,GAAGY,CAAJ;AAAOX,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAG,CAAJ;AAAO;;AAC7B,SAAK,CAAL;AAAQF,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAGT,CAAJ;AAAO;;AAC7B,SAAK,CAAL;AAAQO,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAGW,CAAJ;AAAOV,MAAAA,CAAC,GAAG,CAAJ;AAAO;;AAC7B,SAAK,CAAL;AAAQF,MAAAA,CAAC,GAAGP,CAAJ;AAAOQ,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAG,CAAJ;AAAO;;AAC7B,SAAK,CAAL;AAAQF,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAGU,CAAJ;AAAO;AANjC;;AAQA,MAAIC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAE,EAAEb,CAAC,GAAG,GAAN,CAAH,EAAepB,QAAf,CAAwB,EAAxB,CAAR,EAAqCkC,KAArC,CAA2C,CAAC,CAA5C,CAAN,GAAuD,CAAC,OAAO,CAAC,CAAE,EAAEb,CAAC,GAAG,GAAN,CAAH,EAAerB,QAAf,CAAwB,EAAxB,CAAR,EAAqCkC,KAArC,CAA2C,CAAC,CAA5C,CAAvD,GAAwG,CAAC,OAAO,CAAC,CAAE,EAAEZ,CAAC,GAAG,GAAN,CAAH,EAAetB,QAAf,CAAwB,EAAxB,CAAR,EAAqCkC,KAArC,CAA2C,CAAC,CAA5C,CAAhH;AACA,SAAQD,CAAR;AACH,C,CAED","sourcesContent":["export function highlight(color){\r\n  const doSomething = () => { console.log('test'); }\r\n  //remove any format to avoid overlap issues\r\n  document.execCommand('removeFormat', false, null);\r\n  //save selected text\r\n  var text = \"\";\r\n  if (window.getSelection) {\r\n      text = window.getSelection().toString();\r\n  } else if (document.selection && document.selection.type !== \"Control\") {\r\n      text = document.selection.createRange().text;\r\n  }\r\n  //create new span around the text\r\n  var span = document.createElement(\"span\");\r\n  span.style.backgroundColor = color;\r\n  span.innerText = text;\r\n  span.setAttribute('onclick', \"removeSPan(this)\");\r\n  document.execCommand('insertHTML', false, span.outerHTML);\r\n}\r\n\r\n\r\n\r\n\r\n//Taken from: http://blog.adamcole.ca/2011/11/simple-javascript-rainbow-color.html\r\nexport function rainbowStop(h) {\r\n    let f= (n,k=(n+h*12)%12) => .5-.5*Math.max(Math.min(k-3,9-k,1),-1);\r\n    let rgb2hex = (r,g,b) => \"#\"+[r,g,b].map(x=>Math.round(x*255).toString(16).padStart(2,0)).join('');\r\n    return ( rgb2hex(f(0), f(8), f(4)) );\r\n}\r\n\r\n\r\n//Taken from: https://stackoverflow.com/questions/1484506/random-color-generator\r\nexport function rainbow(numOfSteps, step) {\r\n    // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distinguishable vibrant markers in Google Maps and other apps.\r\n    // Adam Cole, 2011-Sept-14\r\n    // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n    var r, g, b;\r\n    var h = step / numOfSteps;\r\n    var i = ~~(h * 6);\r\n    var f = h * 6 - i;\r\n    var q = 1 - f;\r\n    switch(i % 6){\r\n        case 0: r = 1; g = f; b = 0; break;\r\n        case 1: r = q; g = 1; b = 0; break;\r\n        case 2: r = 0; g = 1; b = f; break;\r\n        case 3: r = 0; g = q; b = 1; break;\r\n        case 4: r = f; g = 0; b = 1; break;\r\n        case 5: r = 1; g = 0; b = q; break;\r\n    }\r\n    var c = \"#\" + (\"00\" + (~ ~(r * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(g * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(b * 255)).toString(16)).slice(-2);\r\n    return (c);\r\n}\r\n\r\n//export default {surroundSelection, rainbowStop, rainbow};\r\n"]},"metadata":{},"sourceType":"module"}