{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Ruben\\\\Desktop\\\\qualishare\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Ruben\\\\Desktop\\\\qualishare\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import io from\"socket.io-client\";import'./Chat.css';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import Messages from'../Messages/Messages';var socket;function Chat(_ref){var Name=_ref.Name,Room=_ref.Room;//remember to destructure\nvar _useState=useState(Name),_useState2=_slicedToArray(_useState,1),name=_useState2[0];var _useState3=useState(Room),_useState4=_slicedToArray(_useState3,1),room=_useState4[0];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var ENDPOINT='localhost:5000';//const [users, setUsers] = useState('');\nuseEffect(function(){console.log(\"Printing: \",name,room);socket=io(ENDPOINT);socket.emit('join',{name:name,room:room},function(error){if(error){alert(error);}});return function(){socket.emit('disconnect');socket.off();};},[ENDPOINT,name,room]);//'[var]' - if 'var' is changed, then useEffect() is called\nuseEffect(function(){socket.on('message',function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});},[messages]);function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}}//console.log(message, messages); //behøver ikke skrive til consolln her\nreturn React.createElement(\"div\",{className:\"outerContainer\"},React.createElement(\"div\",{className:\"innerContainer\"},React.createElement(InfoBar,{room:room}),React.createElement(Messages,{messages:messages,name:name}),React.createElement(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})));}export default Chat;","map":{"version":3,"sources":["C:/Users/Ruben/Desktop/qualishare/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","io","InfoBar","Input","Messages","socket","Chat","Name","Room","name","room","message","setMessage","messages","setMessages","ENDPOINT","console","log","emit","error","alert","off","on","sendMessage","event","preventDefault"],"mappings":"8QAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CAEA,MAAO,YAAP,CAEA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,GAAIC,CAAAA,MAAJ,CAEA,QAASC,CAAAA,IAAT,MAA4B,IAAbC,CAAAA,IAAa,MAAbA,IAAa,CAAPC,IAAO,MAAPA,IAAO,CAAE;AAAF,cACXT,QAAQ,CAACQ,IAAD,CADG,wCACnBE,IADmB,8BAEXV,QAAQ,CAACS,IAAD,CAFG,yCAEnBE,IAFmB,8BAGIX,QAAQ,CAAC,EAAD,CAHZ,yCAGnBY,OAHmB,eAGVC,UAHU,8BAIMb,QAAQ,CAAC,EAAD,CAJd,yCAInBc,QAJmB,eAITC,WAJS,eAK1B,GAAMC,CAAAA,QAAQ,CAAG,gBAAjB,CACA;AAGAf,SAAS,CAAC,UAAM,CACdgB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BR,IAA1B,CAAgCC,IAAhC,EACAL,MAAM,CAAGJ,EAAE,CAACc,QAAD,CAAX,CAEAV,MAAM,CAACa,IAAP,CAAY,MAAZ,CAAoB,CAAET,IAAI,CAAJA,IAAF,CAAQC,IAAI,CAAJA,IAAR,CAApB,CAAoC,SAACS,KAAD,CAAW,CAC7C,GAAGA,KAAH,CAAU,CACRC,KAAK,CAACD,KAAD,CAAL,CACD,CACF,CAJD,EAMA,MAAO,WAAM,CACXd,MAAM,CAACa,IAAP,CAAY,YAAZ,EACAb,MAAM,CAACgB,GAAP,GACD,CAHD,CAMD,CAhBQ,CAgBN,CAACN,QAAD,CAAWN,IAAX,CAAiBC,IAAjB,CAhBM,CAAT,CAgB4B;AAE5BV,SAAS,CAAC,UAAM,CACdK,MAAM,CAACiB,EAAP,CAAU,SAAV,CAAqB,SAACX,OAAD,CAAa,CAChCG,WAAW,8BAAKD,QAAL,GAAeF,OAAf,GAAX,CACD,CAFD,EAGD,CAJQ,CAIN,CAACE,QAAD,CAJM,CAAT,CAMA,QAASU,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CAC1BA,KAAK,CAACC,cAAN,GAEA,GAAGd,OAAH,CAAY,CACVN,MAAM,CAACa,IAAP,CAAY,aAAZ,CAA2BP,OAA3B,CAAoC,iBAAMC,CAAAA,UAAU,CAAC,EAAD,CAAhB,EAApC,EACD,CACF,CAED;AAEA,MACI,4BAAK,SAAS,CAAC,gBAAf,EACE,2BAAK,SAAS,CAAC,gBAAf,EACE,oBAAC,OAAD,EAAS,IAAI,CAAEF,IAAf,EADF,CAEE,oBAAC,QAAD,EAAU,QAAQ,CAAEG,QAApB,CAA8B,IAAI,CAAEJ,IAApC,EAFF,CAGE,oBAAC,KAAD,EAAO,OAAO,CAAEE,OAAhB,CAAyB,UAAU,CAAEC,UAArC,CAAiD,WAAW,CAAEW,WAA9D,EAHF,CADF,CADJ,CASD,CAED,cAAejB,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport './Chat.css';\r\n\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\nlet socket;\r\n\r\nfunction Chat({Name, Room}) { //remember to destructure\r\n  const [name] = useState(Name);\r\n  const [room] = useState(Room);\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const ENDPOINT = 'localhost:5000';\r\n  //const [users, setUsers] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"Printing: \", name, room);\r\n    socket = io(ENDPOINT);\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('disconnect');\r\n      socket.off();\r\n    }\r\n\r\n\r\n  }, [ENDPOINT, name, room]); //'[var]' - if 'var' is changed, then useEffect() is called\r\n\r\n  useEffect(() => {\r\n    socket.on('message', (message) => {\r\n      setMessages([...messages, message ]);\r\n    })\r\n  }, [messages]);\r\n\r\n  function sendMessage(event) {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n\r\n  //console.log(message, messages); //behøver ikke skrive til consolln her\r\n\r\n  return(\r\n      <div className=\"outerContainer\">\r\n        <div className=\"innerContainer\">\r\n          <InfoBar room={room}/>\r\n          <Messages messages={messages} name={name}/>\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}