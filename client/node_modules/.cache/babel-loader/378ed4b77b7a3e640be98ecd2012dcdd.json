{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jespe\\\\Desktop\\\\projects\\\\qualishare\\\\client\\\\src\\\\components\\\\Toolbar\\\\Toolbar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport './Toolbar.css';\nimport { surroundSelection } from '../../Utility/Helpers';\n\nfunction Toolbar({\n  codes,\n  selected,\n  handler,\n  emmitChange\n}) {\n  const [codeList, setCodeList] = useState(codes);\n  const [selectedCode, setSelectedCode] = useState(selected);\n  useEffect(() => {\n    handler(selectedCode);\n  }, [selectedCode]);\n\n  function newSelection(event) {\n    setSelectedCode(event.target.value);\n  }\n\n  const makebold = surroundSelection;\n\n  function surroundSelection() {\n    const result = window.confirm(\"Want to delete the code?\");\n\n    if (result) {\n      var span = document.createElement(\"span\");\n      span.style.fontWeight = \"bold\";\n      span.style.color = \"black\";\n\n      if (window.getSelection) {\n        var sel = window.getSelection();\n\n        if (sel.rangeCount) {\n          var range = sel.getRangeAt(0).cloneRange();\n          range.surroundContents(span);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    }\n  }\n\n  function removeCode() {\n    document.execCommand('removeFormat', false, null);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"toolbar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Label, {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Select Code: \"), React.createElement(\"div\", {\n    className: \"toolbar-innerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: selectedCode,\n    onChange: newSelection,\n    className: \"select btn-dark\",\n    type: \"select\",\n    name: \"select\",\n    id: \"exampleSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, codeList.map(code => {\n    return React.createElement(\"option\", {\n      key: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, code);\n  })), React.createElement(Button, {\n    className: \"btn-dark\",\n    onClick: surroundSelection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Apply\"), React.createElement(Button, {\n    className: \"btn-dark\",\n    onClick: removeCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Remove\")));\n}\n\nexport default Toolbar;","map":{"version":3,"sources":["C:/Users/jespe/Desktop/projects/qualishare/client/src/components/Toolbar/Toolbar.js"],"names":["React","useState","useEffect","Button","Form","FormGroup","Label","Input","surroundSelection","Toolbar","codes","selected","handler","emmitChange","codeList","setCodeList","selectedCode","setSelectedCode","newSelection","event","target","value","makebold","result","window","confirm","span","document","createElement","style","fontWeight","color","getSelection","sel","rangeCount","range","getRangeAt","cloneRange","surroundContents","removeAllRanges","addRange","removeCode","execCommand","map","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AAEA,OAAO,eAAP;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;AAGA,SAASC,OAAT,CAAkB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAlB,EAA2D;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACS,KAAD,CAAxC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAACU,QAAD,CAAhD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACI,YAAD,CAAP;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,WAASE,YAAT,CAAsBC,KAAtB,EAA4B;AAC1BF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD;;AAED,QAAMC,QAAQ,GAAGd,iBAAjB;;AAEA,WAASA,iBAAT,GAA6B;AAC3B,UAAMe,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAe,0BAAf,CAAf;;AACA,QAAIF,MAAJ,EAAW;AACT,UAAIG,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,MAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,GAAwB,MAAxB;AACAJ,MAAAA,IAAI,CAACG,KAAL,CAAWE,KAAX,GAAmB,OAAnB;;AAEA,UAAIP,MAAM,CAACQ,YAAX,EAAyB;AACrB,YAAIC,GAAG,GAAGT,MAAM,CAACQ,YAAP,EAAV;;AACA,YAAIC,GAAG,CAACC,UAAR,EAAoB;AAChB,cAAIC,KAAK,GAAGF,GAAG,CAACG,UAAJ,CAAe,CAAf,EAAkBC,UAAlB,EAAZ;AACAF,UAAAA,KAAK,CAACG,gBAAN,CAAuBZ,IAAvB;AACAO,UAAAA,GAAG,CAACM,eAAJ;AACAN,UAAAA,GAAG,CAACO,QAAJ,CAAaL,KAAb;AACH;AACJ;AACF;AACF;;AAED,WAASM,UAAT,GAAqB;AACnBd,IAAAA,QAAQ,CAACe,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE1B,YAAd;AAA4B,IAAA,QAAQ,EAAEE,YAAtC;AAAoD,IAAA,SAAS,EAAC,iBAA9D;AAAgF,IAAA,IAAI,EAAC,QAArF;AAA8F,IAAA,IAAI,EAAC,QAAnG;AAA4G,IAAA,EAAE,EAAC,eAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,QAAQ,CAAC6B,GAAT,CAAaC,IAAI,IAAI;AACnB,WAAO;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,IAApB,CAAP;AACD,GAFD,CAFJ,CADF,EAQE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEpC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,EASE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEiC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CAFF,CADF;AAgBD;;AAED,eAAehC,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport './Toolbar.css';\r\nimport {surroundSelection} from '../../Utility/Helpers';\r\n\r\n\r\nfunction Toolbar ({codes, selected, handler, emmitChange}) {\r\n  const [codeList, setCodeList] = useState(codes);\r\n  const [selectedCode, setSelectedCode] = useState(selected);\r\n\r\n  useEffect(() => {\r\n    handler(selectedCode);\r\n  }, [selectedCode]);\r\n\r\n  function newSelection(event){\r\n    setSelectedCode(event.target.value);\r\n  }\r\n\r\n  const makebold = surroundSelection;\r\n\r\n  function surroundSelection() {\r\n    const result = window.confirm(\"Want to delete the code?\");\r\n    if (result){\r\n      var span = document.createElement(\"span\");\r\n      span.style.fontWeight = \"bold\";\r\n      span.style.color = \"black\";\r\n\r\n      if (window.getSelection) {\r\n          var sel = window.getSelection();\r\n          if (sel.rangeCount) {\r\n              var range = sel.getRangeAt(0).cloneRange();\r\n              range.surroundContents(span);\r\n              sel.removeAllRanges();\r\n              sel.addRange(range);\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeCode(){\r\n    document.execCommand('removeFormat', false, null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"toolbar-container\">\r\n      <Label className=\"label\">Select Code: </Label>\r\n      <div className=\"toolbar-innerContainer\">\r\n        <Input value={selectedCode} onChange={newSelection} className=\"select btn-dark\" type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n          {\r\n            codeList.map(code => {\r\n              return <option key={code}>{code}</option>\r\n            })\r\n          }\r\n        </Input>\r\n        <Button className=\"btn-dark\" onClick={surroundSelection}>Apply</Button>\r\n        <Button className=\"btn-dark\" onClick={removeCode}>Remove</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;\r\n"]},"metadata":{},"sourceType":"module"}