{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jespe\\\\Desktop\\\\projects\\\\qualishare\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Join from './components/Join/Join';\nimport Chat from './components/Chat/Chat';\nimport Header from './components/Header/Header';\nimport Content from './components/Content/Content';\nimport CodeToggle from './components/CodeToggle/CodeToggle';\nimport CodeFeed from './components/CodeFeed/CodeFeed';\nimport './App.css'; // <Router>\n//   <Route path=\"/\" exact component={Join} />\n//   <Route path=\"/chat\" component={Chat} />\n// </Router>\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      room: \"\",\n      isLoggedIn: false,\n      codes: ['green', 'blue', 'red'],\n      selected: 'green'\n    };\n\n    this.updateStateHandler = property => {\n      this.setState({\n        selected: property\n      }, () => {\n        console.log(this.state.selected);\n      });\n    };\n\n    this.addNameAndRoom = (name, room) => {\n      this.setState({\n        name: name,\n        room: room,\n        isLoggedIn: true\n      });\n    };\n\n    this.join = () => {\n      return React.createElement(Join, {\n        addNameAndRoom: this.addNameAndRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    this.chat = () => {\n      console.log(\"In chat: \", this.state);\n      return React.createElement(Chat, {\n        Name: this.state.name,\n        Room: this.state.room,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Header, {\n      test: () => this.content.surroundSelection,\n      handler: this.updateStateHandler,\n      codes: this.state.codes,\n      selected: this.state.selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CodeToggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(CodeFeed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Content, {\n      ref: instance => {\n        this.content = instance;\n      },\n      selected: this.state.selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.isLoggedIn ? this.chat() : this.join()), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"FOOTER\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jespe/Desktop/projects/qualishare/client/src/App.js"],"names":["React","Component","Join","Chat","Header","Content","CodeToggle","CodeFeed","App","state","name","room","isLoggedIn","codes","selected","updateStateHandler","property","setState","console","log","addNameAndRoom","join","chat","render","content","surroundSelection","instance"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\n\r\nimport Join from './components/Join/Join';\r\nimport Chat from './components/Chat/Chat';\r\nimport Header from './components/Header/Header';\r\nimport Content from './components/Content/Content';\r\nimport CodeToggle from './components/CodeToggle/CodeToggle';\r\nimport CodeFeed from './components/CodeFeed/CodeFeed';\r\n\r\nimport './App.css';\r\n\r\n    // <Router>\r\n    //   <Route path=\"/\" exact component={Join} />\r\n    //   <Route path=\"/chat\" component={Chat} />\r\n    // </Router>\r\n\r\nclass App extends Component {\r\n    state = {\r\n        name: \"\",\r\n        room: \"\",\r\n        isLoggedIn: false,\r\n        codes: ['green', 'blue', 'red'],\r\n        selected: 'green'\r\n    };\r\n\r\n    updateStateHandler = (property) => {\r\n      this.setState({selected: property}, () => {\r\n        console.log(this.state.selected);\r\n      });\r\n\r\n    }\r\n\r\n    //this function updates parent (app.js) state as expected\r\n    addNameAndRoom = (name, room) => {\r\n        this.setState({\r\n            name: name,\r\n            room: room,\r\n            isLoggedIn: true\r\n        }\r\n        );\r\n    };\r\n\r\n    join = () => {\r\n        return (\r\n            <Join addNameAndRoom={this.addNameAndRoom}/>\r\n        )\r\n    };\r\n    chat = () => {\r\n        console.log(\"In chat: \", this.state);\r\n        return (\r\n        <Chat Name={this.state.name} Room={this.state.room} />\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"grid-container\">\r\n              <div className=\"header\">\r\n                <Header test={() => this.content.surroundSelection } handler={this.updateStateHandler} codes={this.state.codes} selected={this.state.selected}/>\r\n              </div>\r\n              <div className=\"menu\">\r\n                <CodeToggle/>\r\n                <CodeFeed/>\r\n              </div>\r\n              <div className=\"content\">\r\n                <Content ref={instance => { this.content = instance; }} selected={this.state.selected}/>\r\n              </div>\r\n              <div className=\"extra\">\r\n                {this.state.isLoggedIn ? this.chat() : this.join()}\r\n              </div>\r\n              <div className=\"footer\">FOOTER</div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}