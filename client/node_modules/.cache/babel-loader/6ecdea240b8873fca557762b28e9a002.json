{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jespe\\\\OneDrive\\\\Skrivebord\\\\projects\\\\qualishare\\\\client\\\\src\\\\components\\\\Toolbar\\\\Toolbar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport './Toolbar.css';\nimport { highlight } from '../../Utility/Helpers';\n\nfunction Toolbar({\n  codes,\n  selected,\n  handler,\n  emmitChange\n}) {\n  const [codeList, setCodeList] = useState(codes);\n  const [selectedCode, setSelectedCode] = useState(selected);\n  useEffect(() => {\n    handler(selectedCode);\n  }, [selectedCode]);\n\n  function newSelection(event) {\n    setSelectedCode(event.target.value);\n  }\n\n  function removeCode() {\n    document.execCommand('removeFormat', false, null);\n  }\n\n  function addCode() {\n    highlight(selectedCode);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"toolbar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Label, {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Select Code: \"), React.createElement(\"div\", {\n    className: \"toolbar-innerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: selectedCode,\n    onChange: newSelection,\n    className: \"select btn-dark\",\n    type: \"select\",\n    name: \"select\",\n    id: \"exampleSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, codeList.map(code => {\n    return React.createElement(\"option\", {\n      key: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, code);\n  })), React.createElement(Button, {\n    className: \"btn-dark\",\n    onClick: addCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Apply\"), React.createElement(Button, {\n    className: \"btn-dark\",\n    onClick: removeCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Remove\")));\n}\n\nexport default Toolbar;","map":{"version":3,"sources":["C:/Users/jespe/OneDrive/Skrivebord/projects/qualishare/client/src/components/Toolbar/Toolbar.js"],"names":["React","useState","useEffect","Button","Form","FormGroup","Label","Input","highlight","Toolbar","codes","selected","handler","emmitChange","codeList","setCodeList","selectedCode","setSelectedCode","newSelection","event","target","value","removeCode","document","execCommand","addCode","map","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AAEA,OAAO,eAAP;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAGA,SAASC,OAAT,CAAkB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAlB,EAA2D;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACS,KAAD,CAAxC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAACU,QAAD,CAAhD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACI,YAAD,CAAP;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,WAASE,YAAT,CAAsBC,KAAtB,EAA4B;AAC1BF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD;;AAED,WAASC,UAAT,GAAqB;AACnBC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACD;;AAED,WAASC,OAAT,GAAkB;AAChBjB,IAAAA,SAAS,CAACQ,YAAD,CAAT;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,YAAd;AAA4B,IAAA,QAAQ,EAAEE,YAAtC;AAAoD,IAAA,SAAS,EAAC,iBAA9D;AAAgF,IAAA,IAAI,EAAC,QAArF;AAA8F,IAAA,IAAI,EAAC,QAAnG;AAA4G,IAAA,EAAE,EAAC,eAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,QAAQ,CAACY,GAAT,CAAaC,IAAI,IAAI;AACnB,WAAO;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,IAApB,CAAP;AACD,GAFD,CAFJ,CADF,EAQE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEF,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,EASE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEH,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CAFF,CADF;AAgBD;;AAED,eAAeb,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport './Toolbar.css';\r\nimport { highlight } from '../../Utility/Helpers';\r\n\r\n\r\nfunction Toolbar ({codes, selected, handler, emmitChange}) {\r\n  const [codeList, setCodeList] = useState(codes);\r\n  const [selectedCode, setSelectedCode] = useState(selected);\r\n\r\n  useEffect(() => {\r\n    handler(selectedCode);\r\n  }, [selectedCode]);\r\n\r\n  function newSelection(event){\r\n    setSelectedCode(event.target.value);\r\n  }\r\n\r\n  function removeCode(){\r\n    document.execCommand('removeFormat', false, null);\r\n  }\r\n\r\n  function addCode(){\r\n    highlight(selectedCode);\r\n  }\r\n\r\n  return (\r\n    <div className=\"toolbar-container\">\r\n      <Label className=\"label\">Select Code: </Label>\r\n      <div className=\"toolbar-innerContainer\">\r\n        <Input value={selectedCode} onChange={newSelection} className=\"select btn-dark\" type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n          {\r\n            codeList.map(code => {\r\n              return <option key={code}>{code}</option>\r\n            })\r\n          }\r\n        </Input>\r\n        <Button className=\"btn-dark\" onClick={addCode}>Apply</Button>\r\n        <Button className=\"btn-dark\" onClick={removeCode}>Remove</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;\r\n"]},"metadata":{},"sourceType":"module"}