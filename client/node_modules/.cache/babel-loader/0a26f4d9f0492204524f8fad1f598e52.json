{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ruben\\\\Desktop\\\\qualishare\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\"; //import queryString from 'query-string';\n\nimport io from \"socket.io-client\";\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nlet socket;\n\nfunction Chat({\n  name,\n  room\n}) {\n  let Name = name;\n  let Room = room; //const [name, setName] = useState('');\n  //const [room, setRoom] = useState('');\n  //const [users, setUsers] = useState('');\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    //const { name, room } = queryString.parse(location.search);\n    socket = io(ENDPOINT); //setName(name);\n    //setRoom(room);\n\n    socket.emit('join', {\n      Name,\n      Room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [Name, Room]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function that handles the send message\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      //socket.emit('sendMessage', message, () => setMessage(''));\n      console.log(name, room);\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"innerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: Room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Ruben/Desktop/qualishare/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","io","InfoBar","Input","Messages","socket","Chat","name","room","Name","Room","message","setMessage","messages","setMessages","ENDPOINT","emit","error","alert","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,IAAIC,MAAJ;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAd,EAA4B;AAC1B,MAAIC,IAAI,GAAGF,IAAX;AACA,MAAIG,IAAI,GAAGF,IAAX,CAF0B,CAI1B;AACA;AACF;;AACE,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,QAAQ,GAAG,gBAAjB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd;AAEAK,IAAAA,MAAM,GAAGJ,EAAE,CAACc,QAAD,CAAX,CAHc,CAKd;AACA;;AAEAV,IAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoB;AAAEP,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAApB,EAAqCO,KAAD,IAAW;AAC7C,UAAGA,KAAH,EAAU;AACRC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAMA,WAAO,MAAM;AACXZ,MAAAA,MAAM,CAACW,IAAP,CAAY,YAAZ;AACAX,MAAAA,MAAM,CAACc,GAAP;AACD,KAHD;AAKD,GAnBQ,EAoBP,CAACV,IAAD,EAAOC,IAAP,CApBO,CAAT;AAsBAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACe,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAa;AAChCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT,CAjC0B,CAwC1B;;AACA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAGA,QAAGZ,OAAH,EAAY;AACV;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ,EAAkBC,IAAlB;AACD;AACF,GARD;;AAUAgB,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEH,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEG,QAApB;AAA8B,IAAA,IAAI,EAAEJ,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEE,OAAhB;AAAyB,IAAA,UAAU,EAAEC,UAArC;AAAiD,IAAA,WAAW,EAAES,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD;;AAED,eAAef,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\n\r\nimport './Chat.css';\r\n\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\nlet socket;\r\n\r\nfunction Chat({name, room}) {\r\n  let Name = name;\r\n  let Room = room;\r\n\r\n  //const [name, setName] = useState('');\r\n  //const [room, setRoom] = useState('');\r\n//const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const ENDPOINT = 'localhost:5000';\r\n\r\n  useEffect(() => {\r\n    //const { name, room } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    //setName(name);\r\n    //setRoom(room);\r\n\r\n    socket.emit('join', { Name, Room }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('disconnect');\r\n      socket.off();\r\n    }\r\n\r\n  }\r\n  , [Name, Room]);\r\n\r\n  useEffect(() => {\r\n    socket.on('message', (message) => {\r\n      setMessages([...messages, message ]);\r\n    })\r\n  }, [messages]);\r\n\r\n\r\n  //function that handles the send message\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n\r\n    if(message) {\r\n      //socket.emit('sendMessage', message, () => setMessage(''));\r\n      console.log(name, room);\r\n    }\r\n  };\r\n\r\n  console.log(message, messages);\r\n\r\n  return(\r\n    <div className=\"outerContainer\">\r\n      <div className=\"innerContainer\">\r\n\r\n        <InfoBar room={Room}/>\r\n        <Messages messages={messages} name={Name}/>\r\n        <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}