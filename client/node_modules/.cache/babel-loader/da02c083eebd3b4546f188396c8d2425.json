{"ast":null,"code":"//import * as Helpers from '../Utility/Helpers';\nvar randomColor = require('randomcolor');\n\nclass Code {\n  //at some point, have database do this automatically, otherwise multiple clients will ruin this\n  constructor(name) {\n    this._name = name; //'const' is private variable\n\n    this._id = Code.ID;\n    Code.ID = Code.ID + 1;\n    let memo = []; //'this' is publicly accessible variable\n\n    let link = undefined;\n    this._color = randomColor();\n    let _quoteRefs = []; //getters\n\n    this.getName = function () {\n      return this._name;\n    };\n\n    this.getId = function () {\n      return this._id;\n    };\n\n    this.getColor = function () {\n      return this._color;\n    };\n\n    this.getQuotes = function () {\n      return _quoteRefs;\n    }; //setter\n\n\n    this.addQuote = function (quote) {\n      _quoteRefs = [..._quoteRefs, quote];\n    };\n\n    this.removeQuote = function (quoteText) {\n      for (let i = 0; i < _quoteRefs.length; i++) {\n        if (_quoteRefs[i].getQuoteText() === quoteText) {\n          _quoteRefs.slice(i, 1); //remove element\n\n\n          break;\n        }\n      }\n    };\n  }\n\n}\n\nCode.ID = 0;\nexport default Code;","map":{"version":3,"sources":["C:/Users/jespe/OneDrive/Skrivebord/projects/qualishare/client/src/data_model/Code.js"],"names":["randomColor","require","Code","constructor","name","_name","_id","ID","memo","link","undefined","_color","_quoteRefs","getName","getId","getColor","getQuotes","addQuote","quote","removeQuote","quoteText","i","length","getQuoteText","slice"],"mappings":"AAAA;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,MAAMC,IAAN,CAAW;AACQ;AAEfC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKC,KAAL,GAAaD,IAAb,CADc,CACK;;AACnB,SAAKE,GAAL,GAAWJ,IAAI,CAACK,EAAhB;AACAL,IAAAA,IAAI,CAACK,EAAL,GAAUL,IAAI,CAACK,EAAL,GAAU,CAApB;AACA,QAAIC,IAAI,GAAG,EAAX,CAJc,CAIC;;AACf,QAAIC,IAAI,GAAGC,SAAX;AACA,SAAKC,MAAL,GAAcX,WAAW,EAAzB;AACA,QAAIY,UAAU,GAAG,EAAjB,CAPc,CAQd;;AACA,SAAKC,OAAL,GAAe,YAAW;AAAE,aAAO,KAAKR,KAAZ;AAAmB,KAA/C;;AACA,SAAKS,KAAL,GAAa,YAAW;AAAE,aAAO,KAAKR,GAAZ;AAAiB,KAA3C;;AACA,SAAKS,QAAL,GAAgB,YAAW;AAAE,aAAO,KAAKJ,MAAZ;AAAmB,KAAhD;;AACA,SAAKK,SAAL,GAAiB,YAAY;AAAE,aAAOJ,UAAP;AAAoB,KAAnD,CAZc,CAcd;;;AACA,SAAKK,QAAL,GAAgB,UAAUC,KAAV,EAAiB;AAC7BN,MAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBM,KAAhB,CAAb;AACH,KAFD;;AAGA,SAAKC,WAAL,GAAmB,UAAUC,SAAV,EAAqB;AACpC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,UAAU,CAACU,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACvC,YAAIT,UAAU,CAACS,CAAD,CAAV,CAAcE,YAAd,OAAiCH,SAArC,EAA+C;AAC3CR,UAAAA,UAAU,CAACY,KAAX,CAAiBH,CAAjB,EAAoB,CAApB,EAD2C,CACnB;;;AACxB;AACH;AACJ;AACJ,KAPD;AAQH;;AA7BM;;AAALnB,I,CACKK,E,GAAK,C;AA+BhB,eAAeL,IAAf","sourcesContent":["//import * as Helpers from '../Utility/Helpers';\r\nvar randomColor = require('randomcolor');\r\n\r\nclass Code {\r\n    static ID = 0; //at some point, have database do this automatically, otherwise multiple clients will ruin this\r\n\r\n    constructor(name) {\r\n        this._name = name; //'const' is private variable\r\n        this._id = Code.ID;\r\n        Code.ID = Code.ID + 1;\r\n        let memo = []; //'this' is publicly accessible variable\r\n        let link = undefined;\r\n        this._color = randomColor();\r\n        let _quoteRefs = [];\r\n        //getters\r\n        this.getName = function() { return this._name };\r\n        this.getId = function() { return this._id };\r\n        this.getColor = function() { return this._color};\r\n        this.getQuotes = function () { return _quoteRefs; };\r\n\r\n        //setter\r\n        this.addQuote = function (quote) {\r\n            _quoteRefs = [..._quoteRefs, quote];\r\n        };\r\n        this.removeQuote = function (quoteText) {\r\n            for (let i = 0; i < _quoteRefs.length; i++){\r\n                if (_quoteRefs[i].getQuoteText() === quoteText){\r\n                    _quoteRefs.slice(i, 1); //remove element\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Code\r\n"]},"metadata":{},"sourceType":"module"}